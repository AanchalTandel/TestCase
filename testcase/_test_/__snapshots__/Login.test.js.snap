// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing ReassignLocationMenu component renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Component
          style={
            Object {
              "marginBottom": 10,
            }
          }
        >
          <Component
            style={
              Object {
                "fontSize": 18,
              }
            }
          >
            Username:
          </Component>
          <TextInput
            allowFontScaling={true}
            onChangeText={[Function]}
            placeholder="Email or Username"
            style={
              Object {
                "borderRadius": 5,
                "borderWidth": 1,
                "height": 50,
                "padding": 3,
                "width": 710,
              }
            }
            underlineColorAndroid="transparent"
            value=""
          />
        </Component>,
        <Component
          style={
            Object {
              "marginBottom": 10,
            }
          }
        >
          <Component
            style={
              Object {
                "fontSize": 18,
              }
            }
          >
            Password:
          </Component>
          <TextInput
            allowFontScaling={true}
            onChangeText={[Function]}
            placeholder="Password"
            style={
              Object {
                "borderRadius": 5,
                "borderWidth": 1,
                "height": 50,
                "padding": 3,
                "width": 710,
              }
            }
            underlineColorAndroid="transparent"
            value=""
          />
        </Component>,
        <Component
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "grey",
              "borderRadius": 5,
              "height": 50,
              "justifyContent": "center",
            }
          }
        >
          <TouchableHighlight
            activeOpacity={0.85}
            delayPressOut={100}
            onPress={[Function]}
            underlayColor="transparent"
          >
            <Component
              style={
                Object {
                  "color": "white",
                  "fontSize": 16,
                }
              }
            >
              SUBMIT
            </Component>
          </TouchableHighlight>
        </Component>,
      ],
      "style": Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 20,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Component
              style={
                Object {
                  "fontSize": 18,
                }
              }
            >
              Username:
            </Component>,
            <TextInput
              allowFontScaling={true}
              onChangeText={[Function]}
              placeholder="Email or Username"
              style={
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "height": 50,
                  "padding": 3,
                  "width": 710,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />,
          ],
          "style": Object {
            "marginBottom": 10,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Username:",
              "style": Object {
                "fontSize": 18,
              },
            },
            "ref": null,
            "rendered": "Username:",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": true,
              "onChangeText": [Function],
              "placeholder": "Email or Username",
              "style": Object {
                "borderRadius": 5,
                "borderWidth": 1,
                "height": 50,
                "padding": 3,
                "width": 710,
              },
              "underlineColorAndroid": "transparent",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Component
              style={
                Object {
                  "fontSize": 18,
                }
              }
            >
              Password:
            </Component>,
            <TextInput
              allowFontScaling={true}
              onChangeText={[Function]}
              placeholder="Password"
              style={
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "height": 50,
                  "padding": 3,
                  "width": 710,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />,
          ],
          "style": Object {
            "marginBottom": 10,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Password:",
              "style": Object {
                "fontSize": 18,
              },
            },
            "ref": null,
            "rendered": "Password:",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": true,
              "onChangeText": [Function],
              "placeholder": "Password",
              "style": Object {
                "borderRadius": 5,
                "borderWidth": 1,
                "height": 50,
                "padding": 3,
                "width": 710,
              },
              "underlineColorAndroid": "transparent",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <TouchableHighlight
            activeOpacity={0.85}
            delayPressOut={100}
            onPress={[Function]}
            underlayColor="transparent"
          >
            <Component
              style={
                Object {
                  "color": "white",
                  "fontSize": 16,
                }
              }
            >
              SUBMIT
            </Component>
          </TouchableHighlight>,
          "style": Object {
            "alignItems": "center",
            "backgroundColor": "grey",
            "borderRadius": 5,
            "height": 50,
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.85,
            "children": <Component
              style={
                Object {
                  "color": "white",
                  "fontSize": 16,
                }
              }
            >
              SUBMIT
            </Component>,
            "delayPressOut": 100,
            "onPress": [Function],
            "underlayColor": "transparent",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "SUBMIT",
              "style": Object {
                "color": "white",
                "fontSize": 16,
              },
            },
            "ref": null,
            "rendered": "SUBMIT",
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Component
            style={
              Object {
                "marginBottom": 10,
              }
            }
          >
            <Component
              style={
                Object {
                  "fontSize": 18,
                }
              }
            >
              Username:
            </Component>
            <TextInput
              allowFontScaling={true}
              onChangeText={[Function]}
              placeholder="Email or Username"
              style={
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "height": 50,
                  "padding": 3,
                  "width": 710,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </Component>,
          <Component
            style={
              Object {
                "marginBottom": 10,
              }
            }
          >
            <Component
              style={
                Object {
                  "fontSize": 18,
                }
              }
            >
              Password:
            </Component>
            <TextInput
              allowFontScaling={true}
              onChangeText={[Function]}
              placeholder="Password"
              style={
                Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "height": 50,
                  "padding": 3,
                  "width": 710,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </Component>,
          <Component
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "grey",
                "borderRadius": 5,
                "height": 50,
                "justifyContent": "center",
              }
            }
          >
            <TouchableHighlight
              activeOpacity={0.85}
              delayPressOut={100}
              onPress={[Function]}
              underlayColor="transparent"
            >
              <Component
                style={
                  Object {
                    "color": "white",
                    "fontSize": 16,
                  }
                }
              >
                SUBMIT
              </Component>
            </TouchableHighlight>
          </Component>,
        ],
        "style": Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 20,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Object {
                    "fontSize": 18,
                  }
                }
              >
                Username:
              </Component>,
              <TextInput
                allowFontScaling={true}
                onChangeText={[Function]}
                placeholder="Email or Username"
                style={
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                    "height": 50,
                    "padding": 3,
                    "width": 710,
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />,
            ],
            "style": Object {
              "marginBottom": 10,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Username:",
                "style": Object {
                  "fontSize": 18,
                },
              },
              "ref": null,
              "rendered": "Username:",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": true,
                "onChangeText": [Function],
                "placeholder": "Email or Username",
                "style": Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "height": 50,
                  "padding": 3,
                  "width": 710,
                },
                "underlineColorAndroid": "transparent",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Component
                style={
                  Object {
                    "fontSize": 18,
                  }
                }
              >
                Password:
              </Component>,
              <TextInput
                allowFontScaling={true}
                onChangeText={[Function]}
                placeholder="Password"
                style={
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 1,
                    "height": 50,
                    "padding": 3,
                    "width": 710,
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />,
            ],
            "style": Object {
              "marginBottom": 10,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Password:",
                "style": Object {
                  "fontSize": 18,
                },
              },
              "ref": null,
              "rendered": "Password:",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": true,
                "onChangeText": [Function],
                "placeholder": "Password",
                "style": Object {
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "height": 50,
                  "padding": 3,
                  "width": 710,
                },
                "underlineColorAndroid": "transparent",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <TouchableHighlight
              activeOpacity={0.85}
              delayPressOut={100}
              onPress={[Function]}
              underlayColor="transparent"
            >
              <Component
                style={
                  Object {
                    "color": "white",
                    "fontSize": 16,
                  }
                }
              >
                SUBMIT
              </Component>
            </TouchableHighlight>,
            "style": Object {
              "alignItems": "center",
              "backgroundColor": "grey",
              "borderRadius": 5,
              "height": 50,
              "justifyContent": "center",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.85,
              "children": <Component
                style={
                  Object {
                    "color": "white",
                    "fontSize": 16,
                  }
                }
              >
                SUBMIT
              </Component>,
              "delayPressOut": 100,
              "onPress": [Function],
              "underlayColor": "transparent",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "SUBMIT",
                "style": Object {
                  "color": "white",
                  "fontSize": 16,
                },
              },
              "ref": null,
              "rendered": "SUBMIT",
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
